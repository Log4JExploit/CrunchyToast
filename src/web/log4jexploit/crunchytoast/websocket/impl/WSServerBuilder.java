/*
 * Copyright (c) 2024 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package web.log4jexploit.crunchytoast.websocket.impl;

import web.log4jexploit.crunchytoast.websocket.inf.WSProtocol;
import web.log4jexploit.crunchytoast.websocket.inf.WSServer;

import java.lang.reflect.Constructor;
import java.security.NoSuchAlgorithmException;
import java.util.HashMap;
import java.util.Set;

public final class WSServerBuilder {

    private static final HashMap<String, Class<?>> registered = new HashMap<>();

    static {
        init();
    }

    public static Set<String> supportedInstances() {
        return registered.keySet();
    }

    public static String getDefault() {
        return "WS";
    }

    public static WSServer build(int port, String instance) throws NoSuchAlgorithmException {
        return construct(port, instance);
    }

    private static WSServer construct(int port, String instance) throws NoSuchAlgorithmException {
        Class<?> impl = registered.get(instance);
        if(impl == null)
            throw new NoSuchAlgorithmException(instance);
        Constructor<?>[] implConstructors = impl.getDeclaredConstructors();
        try {
            return (WSServer) implConstructors[0].newInstance(port);
        } catch (Exception e) {
            throw new NoSuchAlgorithmException(instance, e);
        }
    }

    private static void init() {
        registered.put("WS", WSServerImpl.class);
        registered.put("WSS", WSSServerImpl.class);
    }

    static WSProtocol getDefaultProtocol() {
        return new WSProtocolImpl();
    }
}
