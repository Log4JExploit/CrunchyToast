/*
 * Copyright (c) 2024 CrunchyToast by Log4JExploit
 */

package web.log4jexploit.crunchytoast.http.util;

import java.io.*;
import java.nio.file.Paths;
import java.util.LinkedList;

// Coded by Zadex at 04/08/2021
public final class Blacklist {

    private final LinkedList<String> ips;
    private File file;

    public Blacklist(String path) {
        ips = new LinkedList<>();
        file = new File(path);
    }

    public void load() {
        try {
            if(!file.exists()) {
                return;
            }
            BufferedReader reader = new BufferedReader(new FileReader(file));
            String line;
            ips.clear();
            while((line = reader.readLine()) != null) {
                if(!ips.contains(line)) {
                    ips.add(line);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void save() {
        try {
            if(file.exists()) {
                file.delete();
            }
            file.createNewFile();
            PrintWriter w = new PrintWriter(new FileWriter(file));
            for(String ip : ips) {
                w.println(ip);
            }
            w.flush();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void remove(String ip) {
        if(!this.ips.contains(ip))
            return;
        this.ips.remove(ip);
    }

    public void add(String ip) {
        if(this.ips.contains(ip))
            return;
        this.ips.add(ip);
    }

    public void setPath(String file) {
        this.file = new File(file);
    }

    public LinkedList<String> getBlacklisted() {
        return this.ips;
    }
}
