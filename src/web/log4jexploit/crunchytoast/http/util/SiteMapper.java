/*
 * Copyright (c) 2024 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package web.log4jexploit.crunchytoast.http.util;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UncheckedIOException;
import java.nio.file.Paths;
import java.util.LinkedList;

// Coded by Zadex at 15/05/2021
public final class SiteMapper {

    private Thread autoCrawler;
    private int delay;
    private boolean run;
    private LinkedList<String> urls;
    private File sitemapFolder, sitemapFile, resourceFolder;


    public SiteMapper(File resourceFolder) {
        this.urls = new LinkedList<>();
        this.resourceFolder = resourceFolder;

        init();
    }

    private void init() {
        this.sitemapFolder = new File(resourceFolder.getAbsolutePath()+File.separator+"sitemaps");
        if(!resourceFolder.exists()) {
            resourceFolder.mkdir();
        }
        if(!this.sitemapFolder.exists()) {
            this.sitemapFolder.mkdir();
        }

        try {
            sitemapFile = new File(this.sitemapFolder.getAbsolutePath()+File.separator+"sitemap.txt");
            sitemapFile.createNewFile();
        } catch (IOException e) {
            throw new UncheckedIOException(e);
        }

        this.autoCrawler = new Thread(() -> {
           try {
               this.run = true;
               while(run) {
                   for (int i = 0; i < delay; i++) {
                       Thread.sleep(1);
                       if(!run) {
                           return;
                       }
                   }
                   this.crawl();
               }
           } catch (Exception ignored) {}
        });
    }

    public void start(int delay) {
        this.delay = delay;
        this.autoCrawler.start();
    }

    public void stop() {
        this.run = false;
        this.autoCrawler.interrupt();
        try {
            autoCrawler.join(250);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void crawl() {
        urls.clear();
        if(resourceFolder.listFiles() == null) {
            return;
        }
        subCrawl(resourceFolder, "");
        try {
            sitemapFile.delete();
            sitemapFile.createNewFile();
            PrintWriter writer = new PrintWriter(sitemapFile);
            for(String url : urls) {
                writer.println(url);
            }
            writer.flush();
            writer.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void subCrawl(File folder, String path) {
        File[] files = folder.listFiles();
        if(files == null)
            return;
        for(File file : files) {
            if(file.isDirectory()) {
                subCrawl(file, path+"/"+file.getName());
            } else {
                if(file.getName().endsWith(".html")) {
                    urls.add(path+"/"+file.getName());
                }
            }
        }
    }

}
