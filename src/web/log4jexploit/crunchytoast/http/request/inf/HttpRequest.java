package web.log4jexploit.crunchytoast.http.request.inf;

import web.log4jexploit.crunchytoast.exceptions.HttpProtocolException;
import web.log4jexploit.crunchytoast.exceptions.UnsupportedHttpAttributeException;
import web.log4jexploit.crunchytoast.exceptions.UnsupportedHttpUpgradeException;
import web.log4jexploit.crunchytoast.general.Client;
import web.log4jexploit.crunchytoast.http.request.content.ContentCoder;
import web.log4jexploit.crunchytoast.http.request.impl.HttpRequestImpl;
import web.log4jexploit.crunchytoast.http.util.Http;

import web.log4jexploit.crunchytoast.http.header.HttpHeaderType;

import java.io.*;
import java.util.HashMap;

public interface HttpRequest extends Cloneable {

    ContentCoder receive(Client client, InputStream in) throws IOException, UnsupportedHttpUpgradeException, UnsupportedHttpAttributeException, HttpProtocolException;

    ContentCoder send(Client client, OutputStream out);

// -- HEADER REQUEST TYPE, URI AND PROTOCOL --

    void setRequestType(Http.RequestType requestType);

    void setRequestURI(String requestURI);

    void setRequestProtocol(String requestProtocol);

    void setHeader(HttpHeaderType headerType, String value);

    void setContent(byte[] content);

    Http.RequestType getRequestType();

    String getRequestURI();

    String getRequestProtocol();

    String getHeader(HttpHeaderType headerType);

    String getCustomHeader(String identifier);

    HashMap<HttpHeaderType, String> getHeaders();

    HashMap<String, String> getCustomHeaders();

    Client getClient();

    HttpRequest clone();

    static HttpRequest createDefault() {
        return new HttpRequestImpl();
    }
}
