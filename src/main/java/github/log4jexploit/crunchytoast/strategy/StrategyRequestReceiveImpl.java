/*
 * Copyright (c) 2024 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.strategy;

import github.log4jexploit.crunchytoast.exceptions.HttpProtocolException;
import github.log4jexploit.crunchytoast.http.util.UncheckedIOReader;
import github.log4jexploit.crunchytoast.general.Client;
import github.log4jexploit.crunchytoast.http.message.inf.HttpRequest;
import github.log4jexploit.crunchytoast.http.message.inf.Strategy;
import github.log4jexploit.crunchytoast.http.util.Http;

public class StrategyRequestReceiveImpl implements Strategy.Request {

    private UncheckedIOReader reader;
    private HttpRequest request;

    @Override
    public void initialize(Client client, HttpRequest request) {
        this.reader = new UncheckedIOReader(client.getInputStream());
        this.request = request;
    }

    @Override
    public void execute() {
        String line = reader.nextLine(
                request.getSecurityPolicy().getMaxLineLength()
        );

        try {
            line = line.trim();
            if(!line.toUpperCase().endsWith(request.getProtocol().toUpperCase()))
                throw new HttpProtocolException("Protocols don't match up!");

            String[] split = line.split(" ");

            this.request.setRequestType(Http.RequestType.values()[0].byString(split[0]));
            this.request.setRequestURI(split[1]);
        } catch (Exception e) {
            throw new HttpProtocolException("Error parsing request header: "+e.getClass().getSimpleName());
        }
    }
}
