/*
 * Copyright (c) 2022-2024 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast;

import github.log4jexploit.crunchytoast.http.message.inf.HttpRequest;
import github.log4jexploit.crunchytoast.http.message.inf.HttpResponse;
import github.log4jexploit.crunchytoast.http.outbound.HttpClientBuilder;
import github.log4jexploit.crunchytoast.http.outbound.HttpOutboundClient;
import github.log4jexploit.crunchytoast.logger.NotificationLevel;

import java.util.concurrent.atomic.AtomicLong;

public class LoadTester {

    public static void main(String[] args) {
        final AtomicLong counter = new AtomicLong();

        for(int i = 0; i < 600; i++) {
            new Thread(() -> {
                try {
                    HttpOutboundClient client = HttpClientBuilder.build("localhost", 8080, "HTTP");
                    client.getLogger().setNotificationLevel(NotificationLevel.NOLOG);
                    client.startAndJoin();

                    for(int j = 0; j < 128; j++) {
                        Thread.sleep(0, 10_000);
                        HttpRequest request = HttpRequest.createDefault();
                        request.setRequestURI("/hello?num="+((int) (Math.random() * 128)));
                        HttpResponse response = client.awaitFetch(request);
                        //System.out.println(counter.addAndGet(1) + ": " + response.getResponseCode());
                        System.out.println(counter.addAndGet(1));
                    }

                    client.close();
                } catch (Exception e) {
                    throw new RuntimeException(e);
                }
            }).start();
            try {
                Thread.sleep(32);
            } catch (InterruptedException e) {
                throw new RuntimeException(e);
            }
        }
        System.exit(0);
    }

}
