/*
 * Copyright (c) 2022-2024 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.general;

import github.log4jexploit.crunchytoast.annotation.Optional;
import github.log4jexploit.crunchytoast.http.util.SecurityPolicy;
import github.log4jexploit.crunchytoast.server.Client;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.OutputStream;

/**
 * This helper class allows for dumping of HttpMessages for debugging purposes
 */
@Optional
public class ClientFakeImpl implements Client {

    private final ByteArrayOutputStream buffer;
    private final SecurityPolicy securityPolicy;
    private boolean alive;

    public ClientFakeImpl(ByteArrayOutputStream buffer, SecurityPolicy securityPolicy) {
        this.securityPolicy = securityPolicy;
        this.buffer = buffer;
    }

    @Override
    public void start() {
        System.out.println("Started FakeClient!");
        this.alive = true;
    }


    @Override
    public boolean isAlive() {
        return alive;
    }

    @Override
    public String getAddress() {
        return "FAKE";
    }

    @Override
    public String getAddressResolved() {
        return "FAKE";
    }

    @Override
    public OutputStream getOutputStream() {
        return this.buffer;
    }

    @Override
    public InputStream getInputStream() {
        return new ByteArrayInputStream(new byte[0]);
    }

    @Override
    public void close() {
        this.alive = false;
        System.out.println("Closed FakeClient!");
    }

    public ByteArrayOutputStream getBuffer() {
        return buffer;
    }

    @Override
    public SecurityPolicy getSecurityPolicy() {
        return this.securityPolicy;
    }
}



