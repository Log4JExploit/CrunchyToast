/*
 * Copyright (c) 2022-2025 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.general;

import github.log4jexploit.crunchytoast.http.message.inf.HttpRequest;
import github.log4jexploit.crunchytoast.server.Client;
import github.log4jexploit.crunchytoast.server.Server;
import org.jetbrains.annotations.ApiStatus;

import java.util.function.Function;

@ApiStatus.Experimental
public class CommonText {

    public static final String CRUNCHY_TOAST = "CrunchyToast";

    public static final Function<Client, String> OUT_CONNECT_FAILED =   (client -> "Connection to " + client.getAddress() + " has failed!");
    public static final Function<Client, String> OUT_CONNECT_SUCCESS =  (client -> "Connection to " + client.getAddress() + " has been established!");
    public static final Function<Client, String> OUT_NOT_CONNECTED =  (client -> "Client connecting to " + client.getAddress() + " is not (yet?) connected!");
    public static final Function<Client, String> OUT_DISCONNECTED=  (client -> "Connection to " + client.getAddress() + " has been closed!");

    public static final Function<Client, String> IN_CLIENT_DISCONNECT = (client -> "Client " + client.getAddress() + " has disconnected!");
    public static final Function<Client, String> IN_CLIENT_CONNECT =    (client -> "Client " + client.getAddress() + " has connected!");
    public static final Function<Client, String> IN_CLIENT_CRASH =    (client -> "Client " + client.getAddress() + " has crashed!");

    private static final Function<Server, String> SERVER_ADDRESS = (server -> server.getBindingIP() + ":" + server.getPort());
    public static final Function<Server, String> SERVER_STARTED =   (server -> "Server " + SERVER_ADDRESS.apply(server) + " has started!");
    public static final Function<Server, String> SERVER_CLOSED =    (server -> "Server " + SERVER_ADDRESS.apply(server) + " has stopped!");
    public static final Function<Server, String> SERVER_CRASH =    (server -> "Server " + SERVER_ADDRESS.apply(server) + " has crashed!");
    public static final Function<Server, String> SERVER_PORT_FAIL =    (server -> "Server " + SERVER_ADDRESS.apply(server) + " failed to start: Port already in use!");
    public static final Function<Pair<Server, Integer>, String> SERVER_CLOSED_REMAINING = (pair -> "Server " +  SERVER_ADDRESS.apply(pair.getValueA()) + " closed " + pair.getValueB() + " remaining connections!");

    //public static final Function<Server, String> SERVER_WARN =    (server -> "Server " + server.getBindingIP() + ":" + server.getPort() + " Warning: ");
    //public static final Function<Server, String> SERVER_ERROR =    (server -> "Server " + server.getBindingIP() + ":" + server.getPort() + " Error: ");

    public static final String HTTP_ERR = "Http protocol violated: ";
    public static final String HTTP_ERR_UNKNOWN_TRAILER = "A trailer was received, which wasn't declared!";
    public static final String HTTP_ERR_RESPONSE_HEADER = "An error has occurred while parsing the response header!";
    public static final String HTTP_ERR_REQUEST_HEADER =  "An error has occurred while parsing the request header!";
    public static final String HTTP_ERR_TRAILER = "An error has occurred while parsing a trailer!";
    public static final String HTTP_ERR_HEADER =  "An error has occurred while parsing a header!";
    public static final String HTTP_ERR_CL_MISSING =  "Content-Length header is not present!";
    public static final String HTTP_ERR_CT_MISSING =  "Content-Type header is not present, despite carrying a payload!";
    public static final String HTTP_ERR_HEADER_LIMIT = "Request exceeded the header limit of the security policy!";

    public static final String HTTP_ERR_NO_ROUTE =  "Error: No route found that matches the request!";
    public static final Function<HttpRequest, String> HTTP_DEBUG_REQUEST =
            (req -> "Client " + req.getClient().getAddress() + " sent request of type " + req.getRequestType() + "!");



    public static final String DEBUG =  "DEBUG";
    public static final String INFO =  "INFO";
    public static final String WARNING =  "WARNING";
    public static final String ERROR =  "ERROR";
    public static final String FATAL =  "FATAL";

}
