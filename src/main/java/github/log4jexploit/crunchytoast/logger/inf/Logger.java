/*
 * Copyright (c) 2022-2025 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.logger.inf;

import github.log4jexploit.crunchytoast.logger.NotificationLevel;
import github.log4jexploit.crunchytoast.logger.impl.LoggerTimeImpl;

import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;

public interface Logger {

    Map<String, Long> INSTANCES = new HashMap<>();

    void saveTo(OutputStream out);

    void print(String text);

    void println(String text);

    void debug(String text);

    void info(String text);

    void warn(String text);

    void alert(String text);

    void debugError(Exception e);

    void warnError(Exception e);

    void alertError(Exception e);

    void setNotificationLevel(NotificationLevel level);

    void setClass(Class<?> clazz);

    String fullName();

    Object getBuffer();

    OutputStream getOutputStream();

    static Logger createDefault(Class<?> clazz) {
        return new LoggerTimeImpl(System.out, clazz);
    }

    static long register(Class<?> clazz) {
        String source = clazz == null ? "Unknown" : clazz.getSimpleName();
        INSTANCES.putIfAbsent(source, 0L);
        INSTANCES.put(source, INSTANCES.get(source) + 1);
        return INSTANCES.get(source);
    }
}
