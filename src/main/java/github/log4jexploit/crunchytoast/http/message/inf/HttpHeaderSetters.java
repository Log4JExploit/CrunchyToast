/*
 * Copyright (c) 2024 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.http.message.inf;

import github.log4jexploit.crunchytoast.http.util.Http;

import java.util.Map;

public interface HttpHeaderSetters {

    void setKeepAlive(boolean keepAlive);
    boolean isKeepAlive();

    void setServer(String server);
    String getServer();

    void setContentLength(long length);
    long getContentLength();

    @Deprecated
    void setContentTransferEncoding(Http.Encoding[] encodings);
    @Deprecated
    Http.Encoding[] getContentTransferEncoding();

    void setContentEncodings(Http.Encoding[] encodings);
    Http.Encoding[] getContentEncodings();

    void setAcceptEncodings(Http.Encoding[] encodings);
    Http.Encoding[] getAcceptEncodings();

    void setAcceptLanguages(Http.Language[] languages);
    Http.Language[] getAcceptLanguages();

    void setAcceptCharsets(Http.Charset[] charsets);
    Http.Charset[] getAcceptCharsets();

    void setContentType(Http.ContentType contentType);
    Http.ContentType getContentType();

    void setChunkedTransfer(boolean chunked);
    boolean isChunkedTransfer();

    void setCacheControl(String cacheControl);
    String getCacheControl();

    void setCookie(String cookie);
    String getCookie();

    void setSetCookie(String cookie);
    String getSetCookie();

    void setDate(String date);
    String getDate();

    void setHost(String host);
    String getHost();

    void setLocation(String location);
    String getLocation();

    void setUserAgent(String userAgent);
    String getUserAgent();

    void setVia(String via);
    String getVia();

    void setProxyAuthorization(String username, String password);
    String[] getProxyAuthorization();
    boolean hasProxyAuth();

    void setReferer(String referer);
    String getReferer();

    void setTrailerFields(Http.HeaderType[] headerTypes);
    Http.HeaderType[] getTrailerFields();

    void addTrailer(Http.HeaderType headerType, String value);
    void removeTrailer(Http.HeaderType headerType);

    void setTrailer(Http.HeaderType headerType, String value);
    String getTrailer(Http.HeaderType headerType);

    void setCustomTrailer(String key, String value);
    String getCustomTrailer(String key);

    void setAuthorization(String username, String password);
    String[] getAuthorization();

    void setWWWAuthenticate(boolean required);
    boolean isWWWAuthenticate();

    void setWarning(String warning);
    String getWarning();

    void setUpgradeInsecureRequests(boolean enabled);
    boolean isUpgradeInsecureRequests();

    void setHeader(Http.HeaderType headerType, String value);
    String getHeader(Http.HeaderType headerType);

    void setCustomHeader(String key, String value);
    String getCustomHeader(String key);

    void removeHeader(String key);
    void removeHeader(Http.HeaderType headerType);

    Map<Http.HeaderType, String> getHeaders();
    Map<String, String> getCustomHeaders();

    Map<Http.HeaderType, String> getTrailers();
    Map<String, String> getCustomTrailers();
}
