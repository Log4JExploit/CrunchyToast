/*
 * Copyright (c) 2022-2024 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.http.message.body.impl;

import github.log4jexploit.crunchytoast.http.message.body.inf.IBodyChunked;
import github.log4jexploit.crunchytoast.http.util.Http;
import github.log4jexploit.crunchytoast.http.util.UtilChunks;
import github.log4jexploit.crunchytoast.resource.Resource;
import github.log4jexploit.crunchytoast.server.Client;

import java.util.function.Consumer;

public class BodyContentReaderChunked extends BodyContentBase implements IBodyChunked.Reader {

    private final UtilChunks util;


    public BodyContentReaderChunked(Consumer<Resource> callback, Http.ContentType contentType, Client client) {
        super(callback, contentType, client);
        this.util = new UtilChunks();
    }


    @Override
    public byte[] readNextChunk() {
        if(isFinished())
            return new byte[0];

        byte[] encodedData = util.readEncodedChunk(getInputStream());
        super.counter.addAndGet(encodedData.length);
        super.buffer.write(encodedData);

        if(encodedData.length == 0) {
            markAsDone();
        }

        return encodedData;
    }

    @Override
    public void onFlushRemaining() {
        while(!isFinished())
            readNextChunk();
    }
}
