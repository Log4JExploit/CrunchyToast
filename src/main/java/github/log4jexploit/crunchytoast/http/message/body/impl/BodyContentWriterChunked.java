/*
 * Copyright (c) 2022-2025 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.http.message.body.impl;

import github.log4jexploit.crunchytoast.http.message.body.inf.IBodyChunked;
import github.log4jexploit.crunchytoast.http.util.Http;
import github.log4jexploit.crunchytoast.http.util.UtilChunks;
import github.log4jexploit.crunchytoast.resource.Resource;
import github.log4jexploit.crunchytoast.server.Client;

import java.util.function.Consumer;

public class BodyContentWriterChunked extends BodyContentBase implements IBodyChunked.Writer {

    private final UtilChunks util;


    public BodyContentWriterChunked(Consumer<Resource> callback, Http.ContentType contentType, Client client) {
        super(callback, contentType, client);
        this.util = new UtilChunks();
    }


    @Override
    public void writeNextChunk(byte[] encodedData) {
        writeNextChunk(encodedData, 0, encodedData.length);
    }

    @Override
    public void writeNextChunk(byte[] data, int offset, int len) {
        if(isFinished())
            return;

        util.writeEncodedChunk(getOutputStream(), data, offset, len);
        this.counter.addAndGet(len);

        if(len == 0) {
            markAsDone();
        }
    }

    @Override
    public void onFlushRemaining() {
        if(!isFinished())
            writeNextChunk(new byte[0]);
    }
}
