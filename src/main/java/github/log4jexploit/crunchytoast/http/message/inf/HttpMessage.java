/*
 * Copyright (c) 2024 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.http.message.inf;

import github.log4jexploit.crunchytoast.general.Client;
import github.log4jexploit.crunchytoast.http.endpoint.HttpResource;
import github.log4jexploit.crunchytoast.http.message.body.inf.IBodyContentHandler;
import github.log4jexploit.crunchytoast.http.message.body.inf.IBodyContentReader;
import github.log4jexploit.crunchytoast.http.message.body.inf.IBodyContentWriter;
import github.log4jexploit.crunchytoast.http.message.impl.HttpMessageImpl;
import github.log4jexploit.crunchytoast.http.util.Http;
import github.log4jexploit.crunchytoast.http.util.HttpSecurityPolicy;

public interface HttpMessage extends TrailerHandler, HttpHeaderSetters, Cloneable, HttpProtocol {

    IBodyContentWriter send(Client client);

    IBodyContentReader receive(Client client);

    void performChecks();

    void setContent(byte[] content);

    void setContent(byte[] content, Http.ContentType contentType);

    void setContent(HttpResource resource);

    void setSecurityPolicy(HttpSecurityPolicy securityPolicy);

    byte[] getContent();

    HttpResource getContentAsResource();

    Client getClient();

    HttpSecurityPolicy getSecurityPolicy();

    IBodyContentHandler getBodyContentHandler();

    boolean isSending();

    boolean isSendingComplete();

    static HttpMessage createDefault() {
        return new HttpMessageImpl();
    }
}
