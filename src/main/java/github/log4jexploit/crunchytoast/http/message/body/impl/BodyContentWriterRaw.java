/*
 * Copyright (c) 2024 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.http.message.body.impl;

import github.log4jexploit.crunchytoast.general.Client;
import github.log4jexploit.crunchytoast.http.message.body.inf.IBodyContentWriter;
import github.log4jexploit.crunchytoast.http.util.Http;
import github.log4jexploit.crunchytoast.http.util.UncheckedIOWriter;

import java.io.OutputStream;

public class BodyContentWriterRaw implements IBodyContentWriter {

    private final Http.Encoding[] encodings;
    private final UncheckedIOWriter writer;
    private final int contentLength;
    private final Client client;
    private int counter;


    public BodyContentWriterRaw(Http.Encoding[] encodings, int contentLength, Client client) {
        this.contentLength = contentLength;
        this.encodings = encodings;
        this.client = client;
        this.writer = new UncheckedIOWriter(getOutputStream());
        this.counter = 0;
    }

    public int writeRaw(byte[] buffer) {
        int count = buffer.length;

        if(counter >= contentLength)
            return 0;

        if(count + counter > contentLength)
            count = contentLength - counter;

        writer.write(buffer, 0, count);
        counter += count;

        return count;
    }

    public void skipBytes(int count) {
        if(counter >= contentLength)
            return;

        if(count + counter > contentLength)
            count = contentLength - counter;

        writer.write(new byte[count]);
        counter += count;
    }

    @Override
    public void onFlushRemaining() {
        if(counter < contentLength)
            skipBytes(contentLength - counter);
    }

    @Override
    public Http.Encoding[] getEncodings() {
        return encodings;
    }

    @Override
    public int getContentLength() {
        return this.contentLength;
    }

    @Override
    public OutputStream getOutputStream() {
        return client.getOutputStream();
    }

    @Override
    public void encode() {
        // Do nothing
    }
}
