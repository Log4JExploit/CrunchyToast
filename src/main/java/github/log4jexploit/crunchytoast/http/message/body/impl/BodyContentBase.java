/*
 * Copyright (c) 2022-2025 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.http.message.body.impl;

import github.log4jexploit.crunchytoast.http.message.body.inf.IBodyContentHandler;
import github.log4jexploit.crunchytoast.http.util.Http;
import github.log4jexploit.crunchytoast.resource.Resource;
import github.log4jexploit.crunchytoast.resource.ResourceSplintered;
import github.log4jexploit.crunchytoast.server.Client;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.concurrent.atomic.AtomicLong;
import java.util.function.Consumer;

public abstract class BodyContentBase implements IBodyContentHandler {

    private final Consumer<Resource> callback;
    private final Client client;

    private volatile boolean endOfFile;

    protected final ResourceSplintered buffer;
    protected final AtomicLong counter;


    public BodyContentBase(Consumer<Resource> callback, Http.ContentType contentType, Client client) {
        this.buffer = new ResourceSplintered(contentType);
        this.counter = new AtomicLong();
        this.callback = callback;
        this.endOfFile = false;

        this.client = client;
    }


    public InputStream getInputStream() {
        return this.client.getInputStream();
    }

    public OutputStream getOutputStream() {
        return this.client.getOutputStream();
    }

    public synchronized long getBytesProcessed() {
        return this.counter.get();
    }

    @Override
    public synchronized boolean isFinished() {
        return this.endOfFile;
    }

    protected synchronized void markAsDone() {
        this.endOfFile = true;
        callback.accept(this.buffer);
        onFinish();
    }

    protected void onFinish() {}


}
