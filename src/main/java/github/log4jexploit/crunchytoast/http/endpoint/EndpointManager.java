/*
 * Copyright (c) 2024 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.http.endpoint;

import github.log4jexploit.crunchytoast.exceptions.FileAccessException;
import github.log4jexploit.crunchytoast.exceptions.HttpProtocolException;
import github.log4jexploit.crunchytoast.exceptions.ResourceNotFoundException;
import github.log4jexploit.crunchytoast.http.message.inf.HttpRequest;
import github.log4jexploit.crunchytoast.http.message.inf.HttpResponse;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

public interface EndpointManager {

    /**
     * Determines how this request will be handled and hands it over to<br>
     * its destination for processing.
     * @param request the incoming request.
     * @return A response created by a corresponding {@link HttpEndpoint} or a
     * matching resource found.
     */
    HttpResponse delegateRequest(HttpRequest request) throws HttpProtocolException;

    /**
     * Searches for the requested resource
     * @param uri the uri of the target resource
     * @return the {@link HttpResource} of the requested resource
     * @throws FileAccessException If the URI resolves to a file that is stored outside the resource folder.
     * @throws ResourceNotFoundException If the URI resolves to a file that doesn't exist.
     * @throws IOException If an IO/Error occurs while opening the file.
     */
    HttpResource findResource(String uri) throws FileAccessException, ResourceNotFoundException, IOException;

    void registerHandler(Object instance);

    void unregisterHandler(Object instance);

    void setResourceFolder(String path);

    ArrayList<Object> getHandlers();

    File getResourceFolder();

    static EndpointManager createDefault(String pathToFolder) {
        return new EndpointManagerImpl(new File(pathToFolder));
    }
}
