/*
 * Copyright (c) 2024 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.http.inbound.impl;

import github.log4jexploit.crunchytoast.http.inbound.inf.HttpServer;

import java.lang.reflect.Constructor;
import java.security.NoSuchAlgorithmException;
import java.util.HashMap;
import java.util.Set;

// Coded by Zadex at 16/10/2022
public final class HttpServerBuilder {

    private static final HashMap<String, Class<?>> registered;

    static {
        registered = new HashMap<>();
        init();
    }

    public static Set<String> supportedInstances() {
        return registered.keySet();
    }

    public static String getDefault() {
        return "HTTP";
    }

    public static HttpServer build(int port, String instance) {
        return construct(port, instance);
    }

    private static HttpServer construct(int port, String instance) {
        Class<?> impl = registered.get(instance);

        try {
            if(impl == null)
                throw new Throwable();
            Constructor<?>[] implConstructors = impl.getDeclaredConstructors();

            return (HttpServer) implConstructors[0].newInstance(port);
        } catch (Throwable e) {
            throw new RuntimeException(new NoSuchAlgorithmException(instance));
        }
    }

    private static void init() {
        registered.put("HTTP", HttpServerImpl.class);
        registered.put("HTTPS", HttpsServerImpl.class);
    }
}
