/*
 * Copyright (c) 2022-2024 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.http.util;

import github.log4jexploit.crunchytoast.exceptions.HttpProtocolException;

import java.util.Map;

public class HttpChecksHelper {

    public void assertContentLengthPresent(Map<Http.HeaderType, String> headers) throws HttpProtocolException {
        boolean hasCL = headers.containsKey(Http.HeaderType.CONTENT_LENGTH);
        boolean hasTE = headers.containsKey(Http.HeaderType.TRANSFER_ENCODING);

        if(hasCL || hasTE)
            return;

        throw new HttpProtocolException("Http message is missing Content-Length and Transfer-Encoding!");
    }

    public void assertOneContentTransferMethod(Map<Http.HeaderType, String> headers) throws HttpProtocolException {
        boolean hasCL = headers.containsKey(Http.HeaderType.CONTENT_LENGTH);
        boolean hasTE = headers.containsKey(Http.HeaderType.TRANSFER_ENCODING);

        if(hasCL && hasTE)
            return;

        throw new HttpProtocolException("Http message has both Content-Length and Transfer-Encoding!");
    }

    public void assertContentType(Map<Http.HeaderType, String> headers) throws HttpProtocolException {
        boolean hasCL = headers.containsKey(Http.HeaderType.CONTENT_LENGTH);
        boolean hasTE = headers.containsKey(Http.HeaderType.TRANSFER_ENCODING);
        boolean hasCT = headers.containsKey(Http.HeaderType.CONTENT_TYPE);

        if(hasCL) {
            if(!headers.get(Http.HeaderType.CONTENT_LENGTH).equals("0")) {
                if(hasCT) {
                    return;
                }
            }
        } else if(hasTE && hasCT) {
            return;
        }

        throw new HttpProtocolException("Http message is missing Content-Type header!");
    }

    /*public void assertValidTrailerHeaders(String trailerHeader) {
        HeaderValue headerValue = new HeaderValue(trailerHeader);
        for(HeaderArgument argument : headerValue.getArguments()) {
            argument.
        }
    }

    public void assertNoDuplicateTrailers(Map<Http.HeaderType, String> headers) throws HttpProtocolException {
        if(!headers.containsKey(Http.HeaderType.TRAILER))
            return;

        URLParameter parameter = new URLParameter()
        List<String> trailers = headers.get(Http.HeaderType.TRAILER).
    }*/
}
