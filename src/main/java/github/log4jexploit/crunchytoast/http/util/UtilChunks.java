/*
 * Copyright (c) 2022-2025 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.http.util;

import java.io.InputStream;
import java.io.OutputStream;

public class UtilChunks {

    /**
     * Reads a chunk from the given InputStream
     * @param in The source
     * @return the encoded chunk data
     */
    public byte[] readEncodedChunk(InputStream in) {
        UncheckedIOReader reader = new UncheckedIOReader(in);
        String hexLength = reader.nextLine().toUpperCase();

        if(hexLength.isBlank())
            return new byte[0];

        int chunkSize = Integer.parseUnsignedInt(hexLength, 16);
        byte[] chunk = reader.readNBytes(chunkSize);
        reader.read();

        return chunk;
    }

    /**
     * Writes a chunk to the given OutputStream
     * @param out The destination
     * @param encodedBytes The encoded data to send
     */
    public void writeEncodedChunk(OutputStream out, byte[] encodedBytes) {
        writeEncodedChunk(out, encodedBytes, 0, encodedBytes.length);
    }

    /**
     * Writes a chunk to the given OutputStream
     * @param out The destination
     * @param data The encoded data to send
     * @param offset The offset, if any
     * @param length The length
     */
    public void writeEncodedChunk(OutputStream out, byte[] data, int offset, int length) {
        UncheckedIOWriter writer = new UncheckedIOWriter(out);
        writer.writeLine((Integer.toHexString(length)));
        writer.write(data, offset, length);
        writer.writeLine("");
        writer.flush();
    }

}
