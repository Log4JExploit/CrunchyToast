/*
 * Copyright (c) 2022-2025 CrunchyToast by Log4JExploit
 * Do you keep my non-compiled source code?
 * Then keep this comment.  (View the license)
 */

package github.log4jexploit.crunchytoast.http.provider;

import github.log4jexploit.crunchytoast.http.message.inf.HttpRequest;
import github.log4jexploit.crunchytoast.http.message.inf.HttpResponse;
import github.log4jexploit.crunchytoast.resource.Resource;

import java.util.Objects;
import java.util.Optional;
import java.util.function.Function;

public interface ResourceProvider extends Function<String, Optional<Resource>> {

    @Override
    Optional<Resource> apply(String query);

    default Optional<HttpResponse> apply(HttpRequest request) {
        Objects.requireNonNull(request);
        Optional<Resource> result = apply(request.getRequestURI());
        return result.map((resource -> {
            HttpResponse response = HttpResponse.createDefault();
            response.setContent(resource);
            return response;
        }));
    }

}
